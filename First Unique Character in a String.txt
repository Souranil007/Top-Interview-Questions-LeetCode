Given a string s, find the first non-repeating character in it and return its index. If it does not exist, return -1.

 

Example 1:

Input: s = "leetcode"
Output: 0
Example 2:

Input: s = "loveleetcode"
Output: 2
Example 3:

Input: s = "aabb"
Output: -1


class Solution{
    public:
    int firstUniqChar(string s) {
        unordered_map<char, int> count;
        // Count the frequency of each character in the string
        for (char c : s) {
            count[c]++;
        }
        // Iterate through the string again and return the index of the first character with a count of 1
        for (int i = 0; i < s.size(); i++) {
            if (count[s[i]] == 1) {
                return i;
            }
        }
        // If no unique characters are found, return -1
        return -1;
    }
};
