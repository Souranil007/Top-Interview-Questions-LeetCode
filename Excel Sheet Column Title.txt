Given an integer columnNumber, return its corresponding column title as it appears in an Excel sheet.

For example:

A -> 1
B -> 2
C -> 3
...
Z -> 26
AA -> 27
AB -> 28 
...
 

Example 1:

Input: columnNumber = 1
Output: "A"
Example 2:

Input: columnNumber = 28
Output: "AB"
Example 3:

Input: columnNumber = 701
Output: "ZY"


class Solution {
public:
    string convertToTitle(int columnNumber) {
        string result = "";
        while (columnNumber > 0) {
            int remainder = (columnNumber - 1) % 26;
            char digit = 'A' + remainder;
            result = digit + result;
            columnNumber = (columnNumber - 1) / 26;
        }
        return result;
    }
};

Here's an example of how to solve the "Excel Sheet Column Title" problem on LeetCode using C++:

csharp
Copy code
class Solution {
public:
    string convertToTitle(int columnNumber) {
        string result = "";
        while (columnNumber > 0) {
            int remainder = (columnNumber - 1) % 26;
            char digit = 'A' + remainder;
            result = digit + result;
            columnNumber = (columnNumber - 1) / 26;
        }
        return result;
    }
};

The idea is to convert the given column number to its corresponding Excel sheet column title. We start by initializing an empty string result. Then, we repeatedly divide the column number by 26 (the number of letters in the alphabet) and compute the remainder. We use the remainder to determine the corresponding letter (A for 0, B for 1, C for 2, etc.) and add it to the beginning of result. Finally, we return result.

Note that we subtract 1 from columnNumber before computing the remainder, since Excel sheet column numbers start from 1 (A) instead of 0. Also note that we use a char variable to store the letter, since the ASCII value of 'A' is 65 and we can add the remainder to it to get the corresponding letter.