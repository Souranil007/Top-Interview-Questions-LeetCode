Given two strings ransomNote and magazine, return true if ransomNote can be constructed by using the letters from magazine and false otherwise.

Each letter in magazine can only be used once in ransomNote.

 

Example 1:

Input: ransomNote = "a", magazine = "b"
Output: false
Example 2:

Input: ransomNote = "aa", magazine = "ab"
Output: false
Example 3:

Input: ransomNote = "aa", magazine = "aab"
Output: true



class Solution {
public:
    bool canConstruct(string ransomNote, string magazine) {
        // Create a map to store the frequencies of characters in the magazine
        unordered_map<char, int> charFreq;

        // Count the frequencies of characters in the magazine
        for (char c : magazine) {
            charFreq[c]++;
        }

        // Check if the ransom note can be constructed
        for (char c : ransomNote) {
            // If the character is not present in the magazine or its frequency is zero,
            // we cannot construct the ransom note
            if (charFreq[c] == 0) {
                return false;
            }

            // Decrement the frequency of the character in the map
            charFreq[c]--;
        }

        // If we reach this point, it means the ransom note can be constructed
        return true;
    }
};